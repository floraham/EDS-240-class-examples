---
title: "lecture1.3"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

#loadpackages

```{r}
library(tidyverse)
library(palmerpenguins)
```

```{r}
# untidy data ----
temp_data_wide <- tribble(
  ~date, ~station1, ~station2,  ~station3,
  "2023-10-01", 30.1, 29.8,  31.2,
  "2023-11-01", 28.6, 29.1,  33.4,
  "2023-12-01", 29.9, 28.5,  32.3
)

# make tidy ---- 
temp_data_long <-  temp_data_wide %>% 
  pivot_longer(cols = starts_with("station"), names_to = "station_id", values_to = "temp_c")
```

# plot 1 

# use str() to view the internal structure of a dataset in the console 

```{r}

## if you want to map a color to a variable, you have to specify this within aes 

## specify color globally ---------------------
ggplot(na.omit(penguins),
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm, color = species)) +
  geom_point() + 
  geom_smooth(method = "lm") + 
  scale_color_manual(values = c("darkorange", "purple", "cyan4"))


## specify color locally ---------------

## we are not telling ggplot to globally map color here, so that means that we're going to get a best fit line throughout our entire dataset. 

ggplot(na.omit(penguins),
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm)) +
  geom_point(aes(color = species)) + 
  geom_smooth(method = "lm") 



#piping into a ggplot  ----- 
# penguins %>% ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) 



ggplot(penguins, aes(x = body_mass_g, 
                     y = flipper_length_mm, 
                     color = body_mass_g)) + 
  geom_point() + 
  scale_color_gradient(low = "#132B43", high = "#F7DD4C")


```

## Plot 2 

```{r}
ggplot(penguins, aes(x = species)) + 
  geom_bar() 
```

Overriding geom_bar's stat: 

```{r}

penguins_summary <- penguins %>%  
  count(species) #groups all of the levels of the species column and counts up times they occur 

ggplot(penguins_summary, aes(x= species, y = n)) + geom_bar(stat = "identity") 
```

override default stat mapping 
```{r}
ggplot(penguins, aes(x = species, y = after_stat(prop), group = 1))  + ## prop is proportion
  geom_bar()

```
position adjustments 
```{r}
ggplot(penguins, aes(x = species, fill = island)) + #bar plots use "fill", line/points are "color" 
  geom_bar(position = position_dodge2(preserve = "single"))  #fill stretches across entire plot. "dodge" preserves the vertical position of an geom while adjusting the horizontal position. 
```

coordinate systems + themes 
```{r}
ggplot(penguins, aes(x = species)) + 
  geom_bar() + 
  coord_flip() + #coord_flip flips axes, coord_polar creates a polar graph
  theme_classic() + 
  theme(
    axis.title = element_text(size = 17, color = "purple") 
  )
```










